diff -up screen-4.0.3/attacher.c.cc screen-4.0.3/attacher.c
--- screen-4.0.3/attacher.c.cc	2003-09-08 16:24:48.000000000 +0200
+++ screen-4.0.3/attacher.c	2010-10-22 15:40:38.000000000 +0200
@@ -160,8 +160,8 @@ int how;
 	  if (ret == SIG_POWER_BYE)
 	    {
 	      int ppid;
-	      setgid(real_gid);
-	      setuid(real_uid);
+	      if (setgid(real_gid) || setuid(real_uid))
+		Panic(errno, "setuid/gid");
 	      if ((ppid = getppid()) > 1)
 		Kill(ppid, SIGHUP);
 	      exit(0);
@@ -252,7 +252,10 @@ int how;
 #ifdef MULTIUSER
   if (!multiattach)
 #endif
-    setuid(real_uid);
+    {
+      if (setuid(real_uid))
+        Panic(errno, "setuid");
+    }
 #if defined(MULTIUSER) && defined(USE_SETEUID)
   else
     {
@@ -260,7 +263,8 @@ int how;
       xseteuid(real_uid); /* multi_uid, allow backend to send signals */
     }
 #endif
-  setgid(real_gid);
+  if (setgid(real_gid))
+    Panic(errno, "setgid");
   eff_uid = real_uid;
   eff_gid = real_gid;
 
@@ -439,7 +443,8 @@ AttacherFinit SIGDEFARG
 #ifdef MULTIUSER
   if (tty_oldmode >= 0)
     {
-      setuid(own_uid);
+      if (setuid(own_uid))
+        Panic(errno, "setuid");
       chmod(attach_tty, tty_oldmode);
     }
 #endif
@@ -457,11 +462,14 @@ AttacherFinitBye SIGDEFARG
   if (multiattach)
     exit(SIG_POWER_BYE);
 #endif
-  setgid(real_gid);
+  if (setgid(real_gid))
+    Panic(errno, "setgid");
 #ifdef MULTIUSER
-  setuid(own_uid);
+  if (setuid(own_uid))
+    Panic(errno, "setuid");
 #else
-  setuid(real_uid);
+  if (setuid(real_uid))
+    Panic(errno, "setuid");
 #endif
   /* we don't want to disturb init (even if we were root), eh? jw */
   if ((ppid = getppid()) > 1)
@@ -638,11 +646,14 @@ static sigret_t
 LockHup SIGDEFARG
 {
   int ppid = getppid();
-  setgid(real_gid);
+  if (setgid(real_gid))
+    Panic(errno, "setgid");
 #ifdef MULTIUSER
-  setuid(own_uid);
+  if (setuid(own_uid))
+    Panic(errno, "setuid");
 #else
-  setuid(real_uid);
+  if (setuid(real_uid))
+    Panic(errno, "setuid");
 #endif
   if (ppid > 1)
     Kill(ppid, SIGHUP);
@@ -669,11 +680,14 @@ LockTerminal()
       if ((pid = fork()) == 0)
         {
           /* Child */
-          setgid(real_gid);
+          if (setgid(real_gid))
+            Panic(errno, "setgid");
 #ifdef MULTIUSER
-          setuid(own_uid);
+          if (setuid(own_uid))
+            Panic(errno, "setuid");
 #else
-          setuid(real_uid);	/* this should be done already */
+          if (setuid(real_uid))   /* this should be done already */
+            Panic(errno, "setuid");
 #endif
           closeallfiles(0);	/* important: /etc/shadow may be open */
           execl(prg, "SCREEN-LOCK", NULL);
@@ -806,6 +820,7 @@ screen_builtin_lck()
 #ifdef USE_PAM
   pam_handle_t *pamh = 0;
   int pam_error;
+  char *tty_name;
 #else
   char *pass, mypass[16 + 1], salt[3];
 #endif
@@ -877,6 +892,15 @@ screen_builtin_lck()
       pam_error = pam_start("screen", ppp->pw_name, &PAM_conversation, &pamh);
       if (pam_error != PAM_SUCCESS)
 	AttacherFinit(SIGARG);		/* goodbye */
+
+      if (strncmp(attach_tty, "/dev/", 5) == 0)
+	tty_name = attach_tty + 5;
+      else
+	tty_name = attach_tty;
+      pam_error = pam_set_item(pamh, PAM_TTY, tty_name);
+      if (pam_error != PAM_SUCCESS)
+	AttacherFinit(SIGARG);		/* goodbye */
+
       pam_error = pam_authenticate(pamh, 0);
       pam_end(pamh, pam_error);
       PAM_conversation.appdata_ptr = 0;
diff -up screen-4.0.3/braille_tsi.c.cc screen-4.0.3/braille_tsi.c
--- screen-4.0.3/braille_tsi.c.cc	2003-09-08 16:25:03.000000000 +0200
+++ screen-4.0.3/braille_tsi.c	2010-10-22 15:40:38.000000000 +0200
@@ -127,7 +127,6 @@ display_status_tsi()
   r = read(bd.bd_fd,ibuf,1);
   if (r != 1)
     return -1;
-  if (r != -1)
   if (ibuf[0] == 'V')
     r = read(bd.bd_fd, ibuf, 3);
   else
diff -up screen-4.0.3/extern.h.cc screen-4.0.3/extern.h
--- screen-4.0.3/extern.h.cc	2003-08-22 14:27:57.000000000 +0200
+++ screen-4.0.3/extern.h	2010-10-22 15:40:38.000000000 +0200
@@ -96,6 +96,7 @@ extern void  brktty __P((int));
 extern struct baud_values *lookup_baud __P((int bps));
 extern int   SetBaud __P((struct mode *, int, int));
 extern int   SttyMode __P((struct mode *, char *));
+extern int   CheckTtyname __P((char *));
 
 
 /* mark.c */
diff -up screen-4.0.3/fileio.c.cc screen-4.0.3/fileio.c
--- screen-4.0.3/fileio.c.cc	2003-09-08 16:25:28.000000000 +0200
+++ screen-4.0.3/fileio.c	2010-10-22 15:40:38.000000000 +0200
@@ -74,8 +74,6 @@ register char *str1, *str2;
     }
   else
     {
-      if (len1 == 0)
-	return 0;
       if ((cp = malloc((unsigned) len1 + add_colon + 1)) == NULL)
 	Panic(0, strnomem);
       cp[len1 + add_colon] = '\0'; 
@@ -779,7 +777,7 @@ char *cmd;
 #ifdef SIGPIPE
       signal(SIGPIPE, SIG_DFL);
 #endif
-      execl("/bin/sh", "sh", "-c", cmd, 0);
+      execl("/bin/sh", "sh", "-c", cmd, (char *)NULL);
       Panic(errno, "/bin/sh");
     default:
       break;
diff -up screen-4.0.3/screen.c.cc screen-4.0.3/screen.c
--- screen-4.0.3/screen.c.cc	2010-10-22 15:40:38.000000000 +0200
+++ screen-4.0.3/screen.c	2010-10-22 15:40:38.000000000 +0200
@@ -896,6 +896,8 @@ char **av;
 	Panic(0, "TtyName too long - sorry.");
       if (stat(attach_tty, &st))
 	Panic(errno, "Cannot access '%s'", attach_tty);
+      if (CheckTtyname(attach_tty))
+	Panic(0, "Bad tty '%s'", attach_tty);
 #ifdef MULTIUSER
       tty_mode = (int)st.st_mode & 0777;
 #endif
@@ -1070,7 +1072,7 @@ char **av;
       char *sty = 0;
 
       /* attach_tty is not mandatory */
-      if ((attach_tty = ttyname(0)) == 0)
+      if ((attach_tty = ttyname(0)) == 0 || CheckTtyname(attach_tty))
         attach_tty = "";
       if (strlen(attach_tty) >= MAXPATHLEN)
 	Panic(0, "TtyName too long - sorry.");
diff -up screen-4.0.3/socket.c.cc screen-4.0.3/socket.c
--- screen-4.0.3/socket.c.cc	2003-09-08 16:26:50.000000000 +0200
+++ screen-4.0.3/socket.c	2010-10-22 15:40:38.000000000 +0200
@@ -690,6 +690,7 @@ struct msg *mp;
   char *args[MAXARGS];
   register int n;
   register char **pp = args, *p = mp->m.create.line;
+  char buf[20];
 
   nwin = nwin_undef;
   n = mp->m.create.nargs;
@@ -699,7 +700,6 @@ struct msg *mp;
   if (n)
     {
       int l, num;
-      char buf[20];
 
       l = strlen(p);
       if (IsNumColon(p, 10, buf, sizeof(buf)))
diff -up screen-4.0.3/tty.sh.cc screen-4.0.3/tty.sh
--- screen-4.0.3/tty.sh.cc	2010-10-22 15:40:38.000000000 +0200
+++ screen-4.0.3/tty.sh	2010-10-22 15:40:38.000000000 +0200
@@ -55,6 +55,7 @@ exit 0
 #include <sys/types.h>
 #include <signal.h>
 #include <fcntl.h>
+#include <sys/stat.h>
 #ifndef sgi
 # include <sys/file.h>
 #endif
@@ -1495,6 +1496,19 @@ int ibaud, obaud;
   return 0;
 }
 
+
+int
+CheckTtyname (tty)
+char *tty;
+{
+  struct stat st;
+
+  if (lstat(tty, &st) || !S_ISCHR(st.st_mode) ||
+     (st.st_nlink > 1 && strncmp(tty, "/dev/", 5)))
+    return -1;
+  return 0;
+}
+
 /*
  *  Write out the mode struct in a readable form
  */
diff -up screen-4.0.3/utmp.c.cc screen-4.0.3/utmp.c
--- screen-4.0.3/utmp.c.cc	2003-09-08 16:27:17.000000000 +0200
+++ screen-4.0.3/utmp.c	2010-10-22 15:40:38.000000000 +0200
@@ -356,7 +356,7 @@ RemoveLoginSlot()
       char *tty;
       debug("couln't zap slot -> do mesg n\n");
       D_loginttymode = 0;
-      if ((tty = ttyname(D_userfd)) && stat(tty, &stb) == 0 && (int)stb.st_uid == real_uid && ((int)stb.st_mode & 0777) != 0666)
+      if ((tty = ttyname(D_userfd)) && stat(tty, &stb) == 0 && (int)stb.st_uid == real_uid && !CheckTtyname(tty) && ((int)stb.st_mode & 0777) != 0666)
 	{
 	  D_loginttymode = (int)stb.st_mode & 0777;
 	  chmod(D_usertty, stb.st_mode & 0600);
@@ -382,7 +382,7 @@ RestoreLoginSlot()
     }
   UT_CLOSE;
   D_loginslot = (slot_t)0;
-  if (D_loginttymode && (tty = ttyname(D_userfd)))
+  if (D_loginttymode && (tty = ttyname(D_userfd)) && !CheckTtyname(tty))
     chmod(tty, D_loginttymode);
 }
 
@@ -570,7 +570,7 @@ struct win *wi;
     return ut_delete_user(slot, u.ut_pid, 0, 0) != 0;
 #endif
 #ifdef HAVE_UTEMPTER
-  if (eff_uid && wi->w_ptyfd != -1)
+  if (eff_uid && wi && wi->w_ptyfd != -1)
     {
       /* sigh, linux hackers made the helper functions void */
       if (SLOT_USED(u))
@@ -838,7 +838,7 @@ getlogin()
 
   for (fd = 0; fd <= 2 && (tty = ttyname(fd)) == NULL; fd++)
     ;
-  if ((tty == NULL) || ((fd = open(UTMP_FILE, O_RDONLY)) < 0))
+  if ((tty == NULL) || CheckTtyname(tty) || ((fd = open(UTMP_FILE, O_RDONLY)) < 0))
     return NULL;
   tty = stripdev(tty);
   retbuf[0] = '\0';
